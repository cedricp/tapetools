cmake_minimum_required(VERSION 3.5.0)


project(tapetools_project C CXX)

set(CMAKE_MODULE_PATH ${tapetools_project_SOURCE_DIR}/cmake ${CMAKE_MODULE_PATH})

find_package(OpenGL REQUIRED)
find_package(GLEW REQUIRED)
find_package(SDL2 REQUIRED)
find_package(FFTW3 REQUIRED)

add_subdirectory(libsoundio)
add_subdirectory(libimgui)

add_executable(tapetools audio_manager.cpp audio_sine_gen.cpp audio_record.cpp main.cpp)
add_compile_definitions(tapetools "SOUNDIO_STATIC_LIBRARY")
target_include_directories(tapetools PRIVATE "libimgui/include" "libsoundio/include")
target_link_libraries(tapetools fftw3 libsoundio_static imgui_static)
set_target_properties(tapetools PROPERTIES LINK_FLAGS "-static-libgcc -static-libstdc++")


install (TARGETS tapetools RUNTIME DESTINATION bin)

if(WIN32)
file(GENERATE OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/install_deps_${CMAKE_BUILD_TYPE}.cmake CONTENT [[
set(TARGET_APP $<TARGET_FILE:tapetools>)
message("path to executable: ${TARGET_APP}")
message(STATUS "Looking for deps in '${CMAKE_SYSTEM_LIBRARY_PATH};${CMAKE_MINGW_SYSTEM_LIBRARY_PATH}'")
file(GET_RUNTIME_DEPENDENCIES
    RESOLVED_DEPENDENCIES_VAR deps_resolved
    UNRESOLVED_DEPENDENCIES_VAR deps_unresolved
    LIBRARIES ${TARGET_APP}
    DIRECTORIES ${CMAKE_SYSTEM_LIBRARY_PATH} ${CMAKE_MINGW_SYSTEM_LIBRARY_PATH} C:/msys64/mingw64/bin
    PRE_EXCLUDE_REGEXES "api-ms-*" "ext-ms-*"
    POST_EXCLUDE_REGEXES ".*system32/.*\\.dll"
    )
message(STATUS "Resolving runtime dependencies for ${TARGET_APP}-")
foreach(dep ${deps_resolved})
    file(INSTALL ${dep} DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
endforeach()
foreach(dep ${deps_unresolved})
    message(WARNING "Runtime dependency ${dep} could not be resolved.")
endforeach()
]])

install(SCRIPT ${CMAKE_CURRENT_BINARY_DIR}/install_deps_${CMAKE_BUILD_TYPE}.cmake)
endif()